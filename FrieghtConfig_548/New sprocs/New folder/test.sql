	DECLARE	@SUPPLIER_SCREEN_MONTHS_BACK INT
		,	@StartDate DATE
		,	@EndDate DATE
		,	@Today DATE

	SET @Today = GETDATE()

	--Get the value of the number of months that job will go back from the config default table
	SET @SUPPLIER_SCREEN_MONTHS_BACK = 1;--//(SELECT TOP 1 SUPPLIER_SCREEN_MONTHS_BACK FROM dbo.FP_DEFAULT_CONFIG)
	SET @StartDate = DATEADD(MONTH,-@SUPPLIER_SCREEN_MONTHS_BACK, @Today)
	SET @EndDate = @Today

	PRINT @StartDate
	PRINT @EndDate
	
	----Clean up the table
	DELETE FROM FP_WEEKLY_CALC_METRIC_BY_VENDOR

	--To get the POs that are NOT full Billed 
	SELECT * 
	INTO #NOTFULLYBILLED 
	FROM dbo.fnGetPO_NOTFULLYBILLED(@StartDate, @EndDate)

    SELECT * 
    INTO #PO_LIST
	FROM [dbo].[fnGetPOSWithCalculatePalletsFPA](@StartDate, @EndDate)	
	WHERE LO_PURCHASE_ORDER_ID NOT IN (SELECT LO_PURCHASE_ORDER_ID FROM #NOTFULLYBILLED) --Lead out POs that are not fully billed

    SELECT LO_PURCHASE_ORDER_ID, SUM(cast(ISNULL(FREIGHT_PAID_PO,0) as decimal(10,3))) AS FREIGHT_PAID_PO
	INTO #PO_FREIGHT
	FROM  dbo.fnGetSuppliersPOExpenses(@StartDate, @EndDate) 
	WHERE LO_PURCHASE_ORDER_ID IN (SELECT LO_PURCHASE_ORDER_ID FROM #PO_LIST) 
	GROUP BY LO_PURCHASE_ORDER_ID

		SELECT tv.TMS_VENDOR_ID
	,	lpo.TOTAL_UNITS
	,	lpo.TOTAL_WEIGHT
	,	lpo.TOTAL_CUBES	
	,	CEILING(ISNULL(lpo.TOTAL_PALLETS,0)) AS TOTAL_PALLETS
	,	PO.MAX_26PALLETS_FINAL_CALC
	,	lpo.LO_PURCHASE_ORDER_ID
	,	ISNULL(lpo.PROD_FRT,0) AS PROD_FRT
	,   ABS(lpo.ALLOWANCE) AS ALLOWANCE
	,	ISNULL(lpo.PROD_FRT,0) +  ABS(ISNULL(lpo.ALLOWANCE,0)) AS REVENUE
	,	ISNULL(Freight.FREIGHT_PAID_PO,0) AS PO_EXPENSE
	,   ISNULL(CAST(NULL AS DECIMAL(10,3)),0) AS BACKHAUL_EXPENSE_PO
	,   ISNULL(CAST(NULL AS DECIMAL(10,3)),0) AS TOTAL_EXPENSE
	,   lpo.DIS_WHS_ID
	,	CAST(lpo.REC_DATE AS DATE) as REC_DATE
	,	lpo.SOURCE_SYSTEM
	INTO #POS
	FROM #PO_LIST PO
		INNER JOIN LO_PURCHASE_ORDERS lpo
			ON PO.LO_PURCHASE_ORDER_ID = lpo.LO_PURCHASE_ORDER_ID
		INNER JOIN dbo.TMS_VENDOR tv 
				ON lpo.TMS_VENDOR_ID = tv.TMS_VENDOR_ID
		LEFT JOIN #PO_FREIGHT Freight  
			ON PO.LO_PURCHASE_ORDER_ID = Freight.LO_PURCHASE_ORDER_ID	


		/*Update Pallets(if load is backhaul then use MAX_26PALLETS_FINAL_CALC as Total Pallets otherwise use Total Pallets from PO table.
	 Backhaul Expenses base on the Carrier id and source whs (backhaul load)*/	
	UPDATE #POS
	SET TOTAL_PALLETS = ISNULL(lpo.MAX_26PALLETS_FINAL_CALC,0) 
	,	BACKHAUL_EXPENSE_PO = ISNULL(CASE WHEN lpo.DIS_WHS_ID = ll.DESTINATION_WHS_ID 
										THEN MAX_26PALLETS_FINAL_CALC * phr.BACKHAUL_RATE
										ELSE MAX_26PALLETS_FINAL_CALC * phr.CROSS_DOCK_RATE									 
									 END,0)
	FROM #POS lpo
		INNER JOIN LO_PO_LOADS lpl 
			ON lpo.LO_PURCHASE_ORDER_ID = lpl.LO_PURCHASE_ORDER_ID 
				AND (lpl.IS_DELETED IS NULL OR lpl.IS_DELETED = 0)
		INNER JOIN LO_LOADS ll 
			ON lpl.LO_LOAD_NUMBER = ll.LO_LOAD_NUMBER
				AND ll.CR_CARRIER_ID = 78 
				AND ll.SOURCE_WHS_ID IS NULL 
		LEFT JOIN dbo.tblUNFIfiscalCalendar uc
			ON REC_DATE BETWEEN uc.WeekStart AND uc.WeekEnd
		LEFT JOIN dbo.PALLET_HANDLING_RATE phr
			ON	uc.FiscalYear = phr.[FISCAL_YEAR]
				AND lpo.SOURCE_SYSTEM = phr.SOURCE_SYSTEM	
	 

	----Update POs Expense
	UPDATE #POS
	SET TOTAL_EXPENSE = PO_EXPENSE + BACKHAUL_EXPENSE_PO 

	
	INSERT INTO FP_WEEKLY_CALC_METRIC_BY_VENDOR
	SELECT TMS_VENDOR_ID
		, CAST(CEILING(AVG(TOTAL_UNITS)) as decimal(18,3)) AS AVG_UNITS
		, CAST(CEILING(AVG(TOTAL_WEIGHT)) as decimal(18,3)) AS AVG_WEIGHT
		, CAST(CEILING(AVG(TOTAL_CUBES)) as decimal(18,3)) AS AVG_CUBES
		, CAST(CEILING(AVG(TOTAL_PALLETS)) as decimal(18,3)) AS AVG_PALLETS
		, COUNT(DISTINCT LO_PURCHASE_ORDER_ID) as PO_COUNT
		, CAST(AVG(REVENUE) as decimal(18,3)) AS AVG_REVENUE
		, CAST(AVG(PROD_FRT) as decimal(18,3)) AS AVG_FREIGHT
		, CAST(AVG(ALLOWANCE) as decimal(18,3)) AS AVG_ALLOWANCE
		, CAST(AVG(TOTAL_EXPENSE) as decimal(18,3)) AS AVG_TOTAL_EXPENSE
		, CAST(AVG(REVENUE) - AVG(TOTAL_EXPENSE) as decimal(18,3)) AS AVG_MARGIN
		, CAST(SUM(REVENUE) as decimal(18,3)) AS TOTAL_REVENUE
		, CAST(SUM(PROD_FRT) as decimal(18,3)) AS TOTAL_FREIGHT
		, CAST(SUM(ALLOWANCE) as decimal(18,3)) AS TOTAL_ALLOWANCE
		, CAST(SUM(TOTAL_EXPENSE) as decimal(18,3)) AS TOTAL_EXPENSE
		, CAST(SUM(REVENUE) - SUM(TOTAL_EXPENSE) as decimal(18,3)) AS TOTAL_MARGIN
		, CAST(AVG(REVENUE) / NULLIF(AVG(TOTAL_WEIGHT),0) as decimal(18,6)) AS AVG_REVENUE_PER_LB
		, CAST(AVG(PROD_FRT) / NULLIF(AVG(TOTAL_WEIGHT),0) as decimal(18,6)) AS AVG_FREIGHT_PER_LB
		, CAST(AVG(ALLOWANCE) / NULLIF(AVG(TOTAL_WEIGHT),0) as decimal(18,6)) AS AVG_ALLOWANCE_PER_LB
		, CAST(AVG(TOTAL_EXPENSE)/NULLIF(AVG(TOTAL_WEIGHT),0) as decimal(18,6)) AS AVG_EXPENSE_PER_LB
		, CAST((AVG(REVENUE) - AVG(TOTAL_EXPENSE)) / NULLIF(AVG(TOTAL_WEIGHT),0) as decimal(18,6)) AS AVG_MARGIN_PER_LB
	FROM #POS
	GROUP BY TMS_VENDOR_ID

    DROP TABLE #POS
	DROP TABLE #PO_LIST
	DROP TABLE #NOTFULLYBILLED
	DROP TABLE #PO_FREIGHT

	SELECT * FROM FP_WEEKLY_CALC_METRIC_BY_VENDOR

