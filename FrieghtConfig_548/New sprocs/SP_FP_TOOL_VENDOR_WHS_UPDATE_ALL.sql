USE [TMS]
GO

/****** Object:  StoredProcedure [dbo].[SP_FP_TOOL_VENDOR_WHS_UPDATE_ALL]    Script Date: 7/7/2022 9:44:05 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- ===================================================
-- Author:		Bharath Kavuri
-- Create date: 03/27/19
-- Description:	Update All Form Vendors on Tool screen

--MODIFICATION LIST
--
-- 03/28/2019 - TWL -	REORDERED CR_RATE FILTERS TO ALLOW LEFT JOIN WHEN NONE EXISTS
--					-	ADDED CALC RATE CALCULATION
--					-	Removed PO_weight_estimate, and PO_pallet estimate due to duplicate collumns
-- 03/29/2019 - BK  -   PROPOSED_FREIGHT_PER_LB ELSE logic updated
-- 04/03/2019 - BK  -   SET MILES = 0 FOR BACKHAUL
-- 04/03/2019 - TWL -	LANDED_EXPENSE_PER_LB logic change
-- 04/04/2019 - TWL	-	LANDED_EXPENSE_PER_LB logic updated 
-- 04/05/2019 - TWL -	FIX FOR CALC_ALL_IN_RATE
-- 04/12/2019 - TWL	-	VSP METHOD MODIFICATION
-- 04/24/2019 - TWL -	NULL OUT PROJECTED_LOAD_WEIGHT FOR VPS
-- 06/19/2019 - BK  -   UPDATE OFFERED_PICKUP_ALLOWANCE = NULL IF FP_FF_ALLOWANCE_TYPE_ID = 1
-- 08/30/2019 - KT  -   ADDED CALCULATIONS OF DIRECT CROSSDOCK
-- 10/10/2019 - BK  -   UPDATED CROSSDOCK AND BACKHAUL PALLET RATES TO FREIGHTFORM
-- 11/18/2019 - TWL	-	FILTER OUT VSP VENDORS FROM EAST_BLEND_FREIGHT_RATE
-- 11/25/2019 - TWL	-   Mile cacl change
-- 07/01/2022 - BK  -   Added logic for PRIMARY_RATE and INCLUDE_IN_FREIGHT_PRICING
-- 07/09/22   - CM   - Wrapped in try catch and added logic for default configs
-- ===================================================
ALTER PROCEDURE [dbo].[SP_FP_TOOL_VENDOR_WHS_UPDATE_ALL]
	@FORM_ID BIGINT = NULL

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

BEGIN TRY      
       

	DECLARE @EAST_BLENDED_FREIGHT_RATE AS DECIMAL(10, 3),
			@GILROC_BLENDED_FREIGHT_RATE AS DECIMAL(10, 3)

	--STEP 1 CALCULATIONS
	UPDATE VENDOR
		SET
				--CALC_RATE
				--CALC_RATE = CASE WHEN VENDOR.FP_FF_METHOD_ID = 1 --BACKHAUL(1)
				--					THEN(VENDOR.AVERAGE_PALLETS_PER_PO * (FORM.CROSSDOCK_PALLET_RATE + FORM.BACKHAUL_PALLET_RATE))
				--				 WHEN VENDOR.FP_FF_METHOD_ID = 2 --BACKHAUL CROSSDOCK(2)
				--					THEN(VENDOR.AVERAGE_PALLETS_PER_PO * (FORM.CROSSDOCK_PALLET_RATE + FORM.BACKHAUL_PALLET_RATE) + (CROSSDOCK_MILES.MILES * CONFIG.SHUTTLE_RATE_PER_MILE))
				--				 WHEN VENDOR.FP_FF_METHOD_ID = 3 --DIRECT(3)
				--					THEN ISNULL((CASE WHEN (RT.RATE_UNIT = 'Flat') THEN RT.RATE
				--									  ELSE (CASE WHEN (RT.RATE_UNIT = 'Per Mile') THEN (RT.RATE * RT.MILEAGE) END)
				--								 END), 0)
				--				WHEN VENDOR.FP_FF_METHOD_ID = 5 --DIRECT CROSSDOCK(5)
				--					THEN(VENDOR.AVERAGE_PALLETS_PER_PO * (FORM.CROSSDOCK_PALLET_RATE) + (CROSSDOCK_MILES.MILES * CONFIG.SHUTTLE_RATE_PER_MILE))
				--			END
				CALC_RATE = CASE WHEN RT_PRIMARY_RATE.RATE IS NOT NULL THEN RT_PRIMARY_RATE.RATE ELSE RT.RATE END 
		FROM FP_FREIGHT_FORM_VENDOR AS VENDOR 
			INNER JOIN FP_FREIGHT_FORM AS FORM
				ON VENDOR.FP_FREIGHT_FORM_ID = FORM.FP_FREIGHT_FORM_ID
			INNER JOIN TMS_WHS AS DESTINATION
					ON VENDOR.TMS_WHS_ID = DESTINATION.TMS_WHS_ID
			INNER JOIN FP_DEFAULT_CONFIG AS CONFIG ON CONFIG.SOURCE_SYSTEM = 	
				  CASE WHEN
				   (NOT EXISTS (SELECT 1 FROM FP_DEFAULT_CONFIG WHERE SOURCE_SYSTEM = DESTINATION.SOURCE_SYSTEM))
				  THEN
				   'DEFAULT'
				  ELSE
				    DESTINATION.SOURCE_SYSTEM
				  END	
			LEFT JOIN FP_FF_PICKUP_LOCATIONS AS PICKUP
					ON VENDOR.FP_FF_PICKUP_LOCATIONS_ID = PICKUP.FP_FF_PICKUP_LOCATIONS_ID	
			LEFT JOIN FP_FF_CROSSDOCK_MILES AS CROSSDOCK_MILES 
				ON VENDOR.TMS_WHS_ID = CROSSDOCK_MILES.DESTINATION_WHS_ID
					AND VENDOR.CROSSDOCK_WHS_ID = CROSSDOCK_MILES.ORIGIN_WHS_ID


			LEFT JOIN (SELECT dbo.CR_RATE.*
					   FROM dbo.CR_RATE 
						INNER JOIN dbo.CR_CARRIERS 
							ON dbo.CR_RATE.CR_CARRIER_ID = dbo.CR_CARRIERS.CR_CARRIER_ID
					   WHERE (dbo.CR_CARRIERS.INCLUDE_IN_FREIGHT_PRICING = 1)
					   AND
					   (dbo.CR_RATE.IS_DELETED IS NULL OR dbo.CR_RATE.IS_DELETED = 0)
					   AND
					   (dbo.CR_CARRIERS.IS_DELETED IS NULL OR dbo.CR_CARRIERS.IS_DELETED = 0)) AS RT
					--ON DESTINATION.TMS_WHS_ID = RT.DESTINATION_WHS_ID
					ON CASE WHEN DESTINATION.[CAMPUS_WHS_ID] IS NULL THEN  DESTINATION.TMS_WHS_ID ELSE DESTINATION.[CAMPUS_WHS_ID] END = RT.DESTINATION_WHS_ID
						AND RT.IS_CHEAPEST_RATE = 1
						AND (RT.IS_DELETED IS NULL OR RT.IS_DELETED = 0)
						AND (--PICKUP FILTER
								PICKUP.FP_FF_PICKUP_LOCATIONS_ID IS NOT NULL
								AND (PICKUP.CITY = RT.ORIGIN_CITY AND PICKUP.STATE = RT.ORIGIN_STATE)
						)	
						AND  RT.PROTECTION_LEVEL = (CASE WHEN FORM.FP_FF_TEMPERATURE_ID = 3 THEN 'Dry' ELSE RT.PROTECTION_LEVEL END)

			LEFT JOIN (SELECT dbo.CR_RATE.*
					   FROM dbo.CR_RATE 
						INNER JOIN dbo.CR_CARRIERS 
							ON dbo.CR_RATE.CR_CARRIER_ID = dbo.CR_CARRIERS.CR_CARRIER_ID
					   WHERE (dbo.CR_CARRIERS.INCLUDE_IN_FREIGHT_PRICING = 1)
					   AND
					   (dbo.CR_RATE.IS_DELETED IS NULL OR dbo.CR_RATE.IS_DELETED = 0)
					   AND
					   (dbo.CR_CARRIERS.IS_DELETED IS NULL OR dbo.CR_CARRIERS.IS_DELETED = 0)) AS RT_PRIMARY_RATE
					--ON DESTINATION.TMS_WHS_ID = RT.DESTINATION_WHS_ID
					ON CASE WHEN DESTINATION.[CAMPUS_WHS_ID] IS NULL THEN  DESTINATION.TMS_WHS_ID ELSE DESTINATION.[CAMPUS_WHS_ID] END = RT_PRIMARY_RATE.DESTINATION_WHS_ID
						AND RT_PRIMARY_RATE.[PRIMARY_RATE] = 1
						AND RT_PRIMARY_RATE.IS_CHEAPEST_RATE = 1
						AND (RT_PRIMARY_RATE.IS_DELETED IS NULL OR RT_PRIMARY_RATE.IS_DELETED = 0)
						AND (--PICKUP FILTER
								PICKUP.FP_FF_PICKUP_LOCATIONS_ID IS NOT NULL
								AND (PICKUP.CITY = RT_PRIMARY_RATE.ORIGIN_CITY AND PICKUP.STATE = RT_PRIMARY_RATE.ORIGIN_STATE)
						)	
						AND  RT_PRIMARY_RATE.PROTECTION_LEVEL = (CASE WHEN FORM.FP_FF_TEMPERATURE_ID = 3 THEN 'Dry' ELSE RT_PRIMARY_RATE.PROTECTION_LEVEL END)
		WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
			AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
			AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP

	--STEP 2 CALCULATIONS 
	UPDATE VENDOR   --CALC_ALL_IN_RATE
	SET CALC_ALL_IN_RATE = (VENDOR.CALC_RATE + (FORM.TOOL_FUEL_SURCHARGE * CASE WHEN VENDOR.FP_FF_METHOD_ID = 1
																								THEN 0
																							WHEN VENDOR.FP_FF_METHOD_ID = 2
																								THEN ISNULL(MILES.MILES, 0)
																							WHEN VENDOR.FP_FF_METHOD_ID = 3
																								THEN CASE WHEN RT_PRIMARY_RATE.CR_RATE_ID IS NULL THEN  ISNULL(RT.MILEAGE, 0) ELSE ISNULL(RT_PRIMARY_RATE.MILEAGE, 0) END
																							WHEN VENDOR.FP_FF_METHOD_ID = 5
																								THEN ISNULL(MILES.MILES, 0)
																						END))
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
	INNER JOIN FP_FREIGHT_FORM AS FORM
			ON VENDOR.FP_FREIGHT_FORM_ID = FORM.FP_FREIGHT_FORM_ID
	INNER JOIN TMS_WHS AS DESTINATION
				ON VENDOR.TMS_WHS_ID = DESTINATION.TMS_WHS_ID
	LEFT JOIN FP_FF_CROSSDOCK_MILES AS MILES 
				ON VENDOR.TMS_WHS_ID = MILES.DESTINATION_WHS_ID
					AND VENDOR.CROSSDOCK_WHS_ID = MILES.ORIGIN_WHS_ID
	LEFT JOIN FP_FF_PICKUP_LOCATIONS AS PICKUP
				ON VENDOR.FP_FF_PICKUP_LOCATIONS_ID = PICKUP.FP_FF_PICKUP_LOCATIONS_ID
	--LEFT JOIN CR_RATE AS RT
	--			ON DESTINATION.TMS_WHS_ID = RT.DESTINATION_WHS_ID
	--				AND RT.IS_CHEAPEST_RATE = 1
	--				AND (RT.IS_DELETED IS NULL OR RT.IS_DELETED = 0)
	--				AND (--PICKUP FILTER
	--						PICKUP.FP_FF_PICKUP_LOCATIONS_ID IS NOT NULL
	--						AND (PICKUP.CITY = RT.ORIGIN_CITY AND PICKUP.STATE = RT.ORIGIN_STATE)
	--				)	
	--				AND  RT.PROTECTION_LEVEL = (CASE WHEN FORM.FP_FF_TEMPERATURE_ID = 3 THEN 'Dry' ELSE RT.PROTECTION_LEVEL END)

	LEFT JOIN (SELECT dbo.CR_RATE.*
					   FROM dbo.CR_RATE 
						INNER JOIN dbo.CR_CARRIERS 
							ON dbo.CR_RATE.CR_CARRIER_ID = dbo.CR_CARRIERS.CR_CARRIER_ID
					   WHERE (dbo.CR_CARRIERS.INCLUDE_IN_FREIGHT_PRICING = 1)
					   AND
					   (dbo.CR_RATE.IS_DELETED IS NULL OR dbo.CR_RATE.IS_DELETED = 0)
					   AND
					   (dbo.CR_CARRIERS.IS_DELETED IS NULL OR dbo.CR_CARRIERS.IS_DELETED = 0)) AS RT
				--ON DESTINATION.TMS_WHS_ID = RT.DESTINATION_WHS_ID
				ON CASE WHEN DESTINATION.[CAMPUS_WHS_ID] IS NULL THEN  DESTINATION.TMS_WHS_ID ELSE DESTINATION.[CAMPUS_WHS_ID] END = RT.DESTINATION_WHS_ID
					AND RT.IS_CHEAPEST_RATE = 1
					AND (RT.IS_DELETED IS NULL OR RT.IS_DELETED = 0)
					AND (--PICKUP FILTER
							PICKUP.FP_FF_PICKUP_LOCATIONS_ID IS NOT NULL
							AND (PICKUP.CITY = RT.ORIGIN_CITY AND PICKUP.STATE = RT.ORIGIN_STATE)
					)	
					AND  RT.PROTECTION_LEVEL = (CASE WHEN FORM.FP_FF_TEMPERATURE_ID = 3 THEN 'Dry' ELSE RT.PROTECTION_LEVEL END)

	LEFT JOIN (SELECT dbo.CR_RATE.*
					   FROM dbo.CR_RATE 
						INNER JOIN dbo.CR_CARRIERS 
							ON dbo.CR_RATE.CR_CARRIER_ID = dbo.CR_CARRIERS.CR_CARRIER_ID
					   WHERE (dbo.CR_CARRIERS.INCLUDE_IN_FREIGHT_PRICING = 1)
					   AND
					   (dbo.CR_RATE.IS_DELETED IS NULL OR dbo.CR_RATE.IS_DELETED = 0)
					   AND
					   (dbo.CR_CARRIERS.IS_DELETED IS NULL OR dbo.CR_CARRIERS.IS_DELETED = 0)) AS RT_PRIMARY_RATE
				--ON DESTINATION.TMS_WHS_ID = RT_PRIMARY_RATE.DESTINATION_WHS_ID
				ON CASE WHEN DESTINATION.[CAMPUS_WHS_ID] IS NULL THEN  DESTINATION.TMS_WHS_ID ELSE DESTINATION.[CAMPUS_WHS_ID] END = RT_PRIMARY_RATE.DESTINATION_WHS_ID
					AND RT_PRIMARY_RATE.[PRIMARY_RATE] = 1
					AND RT_PRIMARY_RATE.IS_CHEAPEST_RATE = 1
					AND (RT_PRIMARY_RATE.IS_DELETED IS NULL OR RT_PRIMARY_RATE.IS_DELETED = 0)
					AND (--PICKUP FILTER
							PICKUP.FP_FF_PICKUP_LOCATIONS_ID IS NOT NULL
							AND (PICKUP.CITY = RT_PRIMARY_RATE.ORIGIN_CITY AND PICKUP.STATE = RT_PRIMARY_RATE.ORIGIN_STATE)
					)	
					AND  RT_PRIMARY_RATE.PROTECTION_LEVEL = (CASE WHEN FORM.FP_FF_TEMPERATURE_ID = 3 THEN 'Dry' ELSE RT_PRIMARY_RATE.PROTECTION_LEVEL END)



	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP

	
	--STEP 3 CALCULATIONS 
	UPDATE VENDOR   --LANDED_EXPENSE_PER_LB (REVISIT)
	SET	LANDED_EXPENSE_PER_LB = CASE WHEN VENDOR.FP_FF_METHOD_ID = 1 --BACKHAUL(1)
										THEN CASE	WHEN (VENDOR.AVERAGE_PO_WEIGHT = 0 OR VENDOR.AVERAGE_PO_WEIGHT IS NULL) OR (VENDOR.CALC_ALL_IN_RATE = 0 OR VENDOR.CALC_ALL_IN_RATE IS NULL) THEN NULL 
													ELSE VENDOR.CALC_ALL_IN_RATE / VENDOR.AVERAGE_PO_WEIGHT 
											END
									 WHEN VENDOR.FP_FF_METHOD_ID = 2 --BACKHAUL CROSSDOCK(2)
										THEN CASE WHEN (VENDOR.PROJECTED_LOAD_WEIGHT = 0 OR VENDOR.PROJECTED_LOAD_WEIGHT IS NULL) OR (VENDOR.CALC_ALL_IN_RATE = 0 OR VENDOR.CALC_ALL_IN_RATE IS NULL) THEN NULL 
													ELSE ((((((CONFIG.CROSSDOCK_PALLET_RATE + CONFIG.BACKHAUL_PALLET_RATE) * ISNULL(VENDOR.AVERAGE_PALLETS_PER_PO, 0)) / VENDOR.AVERAGE_PO_WEIGHT) 
														+ VENDOR.CALC_ALL_IN_RATE / VENDOR.PROJECTED_LOAD_WEIGHT) + CONFIG.ESTIMATED_LUMPER_EXPENSE * ISNULL(STOPS.NUMBER_OF_STOPS, 0)) + CONFIG.ESTIMATED_ACCESSORIAL_EXPENSE)
											END
									 WHEN VENDOR.FP_FF_METHOD_ID = 3 --DIRECT(3)
										THEN CASE WHEN (VENDOR.PROJECTED_LOAD_WEIGHT = 0 OR VENDOR.PROJECTED_LOAD_WEIGHT IS NULL) OR (VENDOR.CALC_ALL_IN_RATE = 0 OR VENDOR.CALC_ALL_IN_RATE IS NULL) THEN NULL 
													ELSE ((VENDOR.CALC_ALL_IN_RATE / VENDOR.PROJECTED_LOAD_WEIGHT) + CONFIG.ESTIMATED_LUMPER_EXPENSE + CONFIG.ESTIMATED_ACCESSORIAL_EXPENSE)
											END
									 WHEN VENDOR.FP_FF_METHOD_ID = 5 --DIRECT CROSSDOCK(5)
										THEN CASE WHEN (VENDOR.PROJECTED_LOAD_WEIGHT = 0 OR VENDOR.PROJECTED_LOAD_WEIGHT IS NULL) OR (VENDOR.CALC_ALL_IN_RATE = 0 OR VENDOR.CALC_ALL_IN_RATE IS NULL) THEN NULL 
													ELSE ((((((CONFIG.CROSSDOCK_PALLET_RATE) * ISNULL(VENDOR.AVERAGE_PALLETS_PER_PO, 0)) / VENDOR.AVERAGE_PO_WEIGHT) 
														+ VENDOR.CALC_ALL_IN_RATE / VENDOR.PROJECTED_LOAD_WEIGHT) + CONFIG.ESTIMATED_LUMPER_EXPENSE * ISNULL(STOPS.NUMBER_OF_STOPS, 0)) + CONFIG.ESTIMATED_ACCESSORIAL_EXPENSE)
											END
									 END
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR 
		INNER JOIN TMS_WHS AS DESTINATION
				ON VENDOR.TMS_WHS_ID = DESTINATION.TMS_WHS_ID
		INNER JOIN FP_DEFAULT_CONFIG AS CONFIG ON CONFIG.SOURCE_SYSTEM = 	
			  CASE WHEN
			   (NOT EXISTS (SELECT 1 FROM FP_DEFAULT_CONFIG WHERE SOURCE_SYSTEM = DESTINATION.SOURCE_SYSTEM))
			  THEN
			   'DEFAULT'
			  ELSE
				DESTINATION.SOURCE_SYSTEM
			  END		
		LEFT JOIN FP_FF_CROSSDOCK_STOPS AS STOPS
		    ON VENDOR.TMS_WHS_ID = STOPS.DESTINATION_WHS_ID
					AND VENDOR.CROSSDOCK_WHS_ID = STOPS.ORIGIN_WHS_ID
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP


	--STEP 4 CALCULATIONS 
	UPDATE VENDOR  --PROPOSED_TOTAL_EXPENSE
	SET PROPOSED_TOTAL_EXPENSE = ((VENDOR.LANDED_EXPENSE_PER_LB * VENDOR.AVERAGE_PO_WEIGHT) * VENDOR.TOTAL_POS),
			--TOTAL_MARGIN
		--TOTAL_MARGIN = (VENDOR.TOTAL_ALLOWANCE + VENDOR.TOTAL_BOOKED_FREIGHT) - ((VENDOR.LANDED_EXPENSE_PER_LB * VENDOR.AVERAGE_PO_WEIGHT) * VENDOR.TOTAL_POS),			
			--PROPOSED_FREIGHT_PER_LB
		PROPOSED_FREIGHT_PER_LB = CASE WHEN VENDOR.BOOKED_FREIGHT_OVERRIDE = 1 THEN VENDOR.PROPOSED_FREIGHT_PER_LB
										--ELSE (VENDOR.LANDED_EXPENSE_PER_LB * (ISNULL(FORM.TOOL_MARGIN_TARGET, 0) + ISNULL(FORM.TOOL_COOLER_FREEZER_UPCHARGE, 0) + 1) + ISNULL(FORM.TOOL_PFF_PFH_UPCHARGE, 0)) END
										ELSE (VENDOR.LANDED_EXPENSE_PER_LB * (ISNULL(FORM.TOOL_COOLER_FREEZER_UPCHARGE, 0) + 1) + ISNULL(FORM.TOOL_MARGIN_TARGET, 0) + ISNULL(FORM.TOOL_PFF_PFH_UPCHARGE, 0)) END
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
		INNER JOIN FP_FREIGHT_FORM AS FORM
			ON VENDOR.FP_FREIGHT_FORM_ID = FORM.FP_FREIGHT_FORM_ID
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP

	--STEP 5 CALCULATIONS
	UPDATE VENDOR   --PROPOSED_BOOKED_FREIGHT
	SET	PROPOSED_BOOKED_FREIGHT =(VENDOR.PROPOSED_FREIGHT_PER_LB * VENDOR.AVERAGE_PO_WEIGHT * VENDOR.TOTAL_POS)
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP


	--STEP 6 CALCULATIONS 
	UPDATE VENDOR   --PROPOSED_PROJECTED_MARGIN
	SET	PROPOSED_PROJECTED_MARGIN =	((VENDOR.PROPOSED_TOTAL_ALLOWANCE + VENDOR.PROPOSED_BOOKED_FREIGHT) - VENDOR.PROPOSED_TOTAL_EXPENSE)
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP

	--STEP 7 CALCULATIONS (VSP SPECIFIC)
	UPDATE VENDOR
	SET	VENDOR.PROJECTED_LOAD_WEIGHT =		CASE WHEN PROJECTED_LOAD_WEIGHT_OVERRIDE = 1 THEN PROJECTED_LOAD_WEIGHT
												ELSE NULL
											END,
		VENDOR.PROPOSED_FREIGHT_PER_LB =	CASE WHEN VENDOR.BOOKED_FREIGHT_OVERRIDE = 1 THEN VENDOR.PROPOSED_FREIGHT_PER_LB
												ELSE NULL
											END,
		VENDOR.PROPOSED_BOOKED_FREIGHT = NULL,
		VENDOR.CR_RATE_ID = NULL,
		VENDOR.PROPOSED_TOTAL_ALLOWANCE = NULL, 
		VENDOR.LANDED_EXPENSE_PER_LB = NULL,
		VENDOR.PROPOSED_TOTAL_EXPENSE = NULL,
		VENDOR.CALC_RATE = NULL,
		VENDOR.CALC_ALL_IN_RATE = NULL,
		--VENDOR.TOTAL_ALLOWANCE = NULL,
		--VENDOR.TOTAL_BOOKED_FREIGHT = NULL,
		VENDOR.PROPOSED_PROJECTED_MARGIN = NULL
		--VENDOR.SUPPLIER_OFFERED_PROJECTED_MARGIN = NULL
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
			INNER JOIN TMS_WHS AS DESTINATION
					ON VENDOR.TMS_WHS_ID = DESTINATION.TMS_WHS_ID
			INNER JOIN FP_DEFAULT_CONFIG AS CONFIG ON CONFIG.SOURCE_SYSTEM = 	
				  CASE WHEN
				   (NOT EXISTS (SELECT 1 FROM FP_DEFAULT_CONFIG WHERE SOURCE_SYSTEM = DESTINATION.SOURCE_SYSTEM))
				  THEN
				   'DEFAULT'
				  ELSE
				    DESTINATION.SOURCE_SYSTEM
				  END	
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND VENDOR.FP_FF_METHOD_ID = 4 --VSP

	--STEP 7 CALCULATIONS	
	SELECT  --EAST_BLENDED_FREIGHT_RATE
			@EAST_BLENDED_FREIGHT_RATE = AVG(ISNULL(VENDOR.PROPOSED_FREIGHT_PER_LB, 0))
			FROM FP_FREIGHT_FORM AS FORM
			INNER JOIN FP_FREIGHT_FORM_VENDOR AS VENDOR
				ON FORM.FP_FREIGHT_FORM_ID = VENDOR.FP_FREIGHT_FORM_ID
				AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
			INNER JOIN TMS_WHS AS WHS 
				ON VENDOR.TMS_WHS_ID = WHS.TMS_WHS_ID
			WHERE FORM.FP_FREIGHT_FORM_ID = @FORM_ID
				AND WHS.SOURCE_SYSTEM='UBS'
				AND VENDOR.FP_FF_METHOD_ID <> 4 --VSP
			GROUP BY FORM.FP_FREIGHT_FORM_ID, FORM.EAST_BLENDED_FREIGHT_RATE;

	--STEP 8 CALCULATIONS	
	SELECT  --GILROC_BLENDED_FREIGHT_RATE
			@GILROC_BLENDED_FREIGHT_RATE = AVG(ISNULL(VENDOR.PROPOSED_FREIGHT_PER_LB, 0))
			FROM FP_FREIGHT_FORM AS FORM
			INNER JOIN FP_FREIGHT_FORM_VENDOR AS VENDOR
				ON FORM.FP_FREIGHT_FORM_ID = VENDOR.FP_FREIGHT_FORM_ID
				AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
			INNER JOIN TMS_WHS AS WHS 
				ON VENDOR.TMS_WHS_ID = WHS.TMS_WHS_ID
			WHERE FORM.FP_FREIGHT_FORM_ID = @FORM_ID
			AND WHS.TMS_WHS_ID IN (1, 114)
			GROUP BY FORM.FP_FREIGHT_FORM_ID, FORM.EAST_BLENDED_FREIGHT_RATE;

	--UPDATE FORM WITH BLEND VALUES
	UPDATE FORM
	SET GILROC_BLENDED_FREIGHT_RATE = @GILROC_BLENDED_FREIGHT_RATE,
		EAST_BLENDED_FREIGHT_RATE = @EAST_BLENDED_FREIGHT_RATE
	FROM FP_FREIGHT_FORM AS FORM
	WHERE FORM.FP_FREIGHT_FORM_ID = @FORM_ID

	--IF FP_FF_ALLOWANCE_TYPE_ID = 1 (NO ALLOWANCE), UPDATE OFFERED_PICKUP_ALLOWANCE TO NULL
	UPDATE VENDOR
	SET OFFERED_PICKUP_ALLOWANCE = NULL
	FROM FP_FREIGHT_FORM_VENDOR AS VENDOR
	INNER JOIN FP_FREIGHT_FORM AS FORM
			ON VENDOR.FP_FREIGHT_FORM_ID = FORM.FP_FREIGHT_FORM_ID
	WHERE VENDOR.FP_FREIGHT_FORM_ID = @FORM_ID
		AND (VENDOR.IS_DELETED IS NULL OR VENDOR.IS_DELETED = 0)
		AND FORM.FP_FF_ALLOWANCE_TYPE_ID = 1
		
END TRY      
BEGIN CATCH      
INSERT INTO [dbo].[DB_Errors]      
 VALUES (NEWID(), SUSER_SNAME(), ERROR_NUMBER(), ERROR_STATE(), ERROR_SEVERITY(), ERROR_LINE(), ERROR_PROCEDURE(), ERROR_MESSAGE(), GETDATE());      
END CATCH 		

END
GO


